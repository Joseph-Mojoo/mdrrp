@model mdrrp_prototype.ViewModels.SubcomponentClerkViewModel

<div>
   
</div>
<div class="panel panel-primary" style="margin-top:60px;">
    <div class="panel-heading">
        @Html.ActionLink("Back to users", "ViewAssignedSubcomponents","SubComponent", new{id = Request.Url.Segments.Last()}, new {@class="btn btn-info pull-right"})
        <h3 class="heading-text text-capitalize">Assign data clerk to subcomponent</h3>

    </div>
    <div class="panel-body">
        @using (Html.BeginForm("AssignSubcomponent", "SubComponent", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>SubcomponentToClerkModel</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.Label("ProjectId", "Project Name", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProjectId", null, new { @class = "form-control" })
                        @Html.ValidationMessage("ProjectId", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("ComponentId", "Component Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownList("ComponentId", new SelectList(""), "--Please select component", new { @class = "form-control" })
                        @Html.ValidationMessage("ComponentId", "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubcomponentId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(model => model.SubcomponentId, new SelectList(""), "--Please select subcomponent", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubcomponentId, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.Hidden("SubcomponentClerkViewModelId", 0)
                @Html.Hidden("UserId", Request.Url.Segments.Last())


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Assign" class="btn btn-primary btn-block" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>



@section scripts
{
    <script>
        $(document).ready(function() {


            //hook an event to the projectId element

            $("#ProjectId").ready(function() {

                //get the value of the project Id and


                var projectId = $("#ProjectId").val();

                GetComponents(projectId);


            });

            $("#ProjectId").change(function() {

                var projectId = $(this).val();

                GetComponents(projectId);

                //get the component Id selected
                var componentId = $("#ComponentId").val();

                GetSubcomponents(componentId);
            });

            $("#ComponentId").change(function() {

                var componentId = $(this).val();

               
                GetSubcomponents(componentId);
            });


        });

        function GetComponents(projectId) {

            //fetch components from the system

            $.ajax({

                type: "Get",
                url: "/SubComponent/GetComponents?id=" + projectId,
                success: function(responce) {

                    $("#ComponentId").empty();
                    $("#ComponentId").append(responce);

                }
            });
        }

        function GetSubcomponents(componentId) {

            //fetch components from the system

            $.ajax({

                type: "Get",
                url: "/SubComponent/GetSubcomponents?id=" + componentId,
                success: function(responce) {

                    $("#SubcomponentId").empty();
                    $("#SubcomponentId").append(responce);

                }
            });

        }
    </script>
}
